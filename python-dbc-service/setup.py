import subprocess
import sys
import os

def generate_protobuf():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Python –∫–æ–¥–∞ –∏–∑ protobuf"""
    print("üîß Generating protobuf files...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    os.makedirs("src/grpc", exist_ok=True)
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
    result = subprocess.run([
        sys.executable, "-m", "grpc_tools.protoc",
        "--proto_path=proto",
        "--python_out=src/grpc",
        "--grpc_python_out=src/grpc",
        "proto/dbc.proto"
    ], capture_output=True, text=True)
    
    if result.returncode == 0:
        print("‚úÖ Protobuf files generated successfully")
    else:
        print(f"‚ùå Error generating protobuf: {result.stderr}")
        return False
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ imports –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
    fix_imports()
    return True

def fix_imports():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ imports –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö"""
    grpc_file = "src/grpc/dbc_pb2_grpc.py"
    if os.path.exists(grpc_file):
        with open(grpc_file, 'r') as f:
            content = f.read()
        
        content = content.replace("import dbc_pb2", "from . import dbc_pb2")
        
        with open(grpc_file, 'w') as f:
            f.write(content)
        
        print("‚úÖ Fixed protobuf imports")

if __name__ == "__main__":
    generate_protobuf()
